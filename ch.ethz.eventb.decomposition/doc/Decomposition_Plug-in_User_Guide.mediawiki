{{TOCright}}

== Introduction ==
The Decomposition plug-in allows to decompose a model into sub-models. 

See the [http://wiki.event-b.org/index.php/Event_Model_Decomposition Event-B Model Decomposition] page for technical details on ''shared variables'' (A-style) decomposition.

== Installing and Updating ==
{{TODO | Not yet released, waiting for Rodin 1.2}}
=== Setup ===
The following steps will guide you through the setup process:
# Download Rodin for your platform from [http://sourceforge.net/project/showfiles.php?group_id=108850&amp;package_id=181714&amp;release_id=687381 Sourceforge]:
# Extract the downloaded zip file.
# Start Rodin from the folder where you extracted the zip file in the previous step.
# Install the Decomposition plug-in:
## In the menu choose ''Help'' -> ''Software Updates...''
## Select the tab ''Available Software'' and click ''Add Site...''
## Use the location URL: [http://rodin-b-sharp.sourceforge.net/updates http://rodin-b-sharp.sourceforge.net/updates]
## Back in ''Available Software'' open the update site you just added
## Select ''Event-B Decomposition'' and click ''Install...''
# Restart Rodin as suggested.

Now you are ready to use the Decomposition plug-in. 

=== Update ===
The following steps will guide you through the update process:
# In Rodin open the preferences (''Window'' -> ''Preferences'' or for Mac: ''Rodin'' -> ''Preferences'')
# Find ''Install/Update'' -> ''Automatic Updates''
# Select ''Automatically find new updates and notify me''

As soon as Rodin finds a new update it will ask you if you would like to install it.

=== Release Notes ===
See the [http://wiki.event-b.org/index.php/Decomposition_Release_History Decomposition Release History].

== Decomposing ==
=== Running the Decompose Action ===
The <tt>Decompose</tt> action launches the decomposition wizard, which will perform the decomposition according to the preferences. It is available:
{| 
|-
|1. Either from the toolbar of the Event-B explorer. 
|2. Or from the contextual menu, when right-clicking on a machine.
|-
| valign="top" | [[Image:decompose_explorer.png|center]] 
| valign="top" | [[Image:decompose_contextual.png|center]]
|}

=== Setting the Preferences ===
The different decomposition options are described below:
* Decomposition style. The shared variables (A-style) or shared events (B-style) decomposition will be performed, according to the specified decomposition style.
* Context decomposition. The contexts seen by the input machine are decomposed if and only if this option is checked; otherwise, they are copied from the initial model to the decomposed sub-models.

[[Image:decompose_options.png]]

=== Selecting the Input Machine and Partitioning the Elements ===
The following information has to be provided in the wizard dialog:
* Which machine will be decomposed.
* Which sub-machines will be generated.
* How the elements, and more precisely the events for shared variables (A-style) decomposition and the variables for shared events (B-style) decomposition, are partioned among these sub-machines.

[[Image:decompose_partition.png]]

=== Importing / Exporting the Configuration ===
{{TODO | To be completed}}

It is possible on the one hand to export a configuration to a file, and on the other hand to import a configuration from a file.

== Reporting a Bug or Requesting a Feature ==
Please, use the SourceForge trackers to report a bug on existing features, or to request new features:
* [https://sourceforge.net/tracker/?atid=651669&amp;group_id=108850&amp;category=1259297 Bugs]
* [https://sourceforge.net/tracker/?atid=651672&amp;group_id=108850&amp;category=1259298 Feature Requests]

== Error Messages ==
=== When running the decomposition ===
The decomposition is forbidden, and an error message is displayed, if one of the following conditions applies:
*The built INITIALISATION events of the sub-machines would define an action modifying at the same time a ''private'' variable and a ''shared'' variable.<br/><tt>Action {0} of the INITIALISATION event modifies a private variable and a shared variable</tt><br/>See [http://wiki.event-b.org/index.php/Event_Model_Decomposition#Ensuring_that_a_shared_variable_is_not_refined_by_an_initialization_event Ensuring that a shared variable is not refined by an initialization event] for further explanations.
*The sub-models shall be created in new Event-B projects, but one of the entered project names already exists.<br/><tt>The project {0} should not exist</tt>
*The same project name has been entered for two distinct sub-models.<br/><tt>Duplicate sub-model names: {0}</tt>

=== When running the static checker ===
The following rules are enforced by the static checker, and errors are returned (in the Rodin Problems view) accordingly:
*A ''shared'' variable shall be present in subsequent refinements.<br/><tt>Shared variable {0} has disappeared</tt>
*A ''shared'' variable shall still have the ''shared'' attribute in subsequent refinements.<br/><tt>Inconsistent nature of shared variable {0}, shared expected</tt>
*An ''external'' event shall be present in subsequent refinements.<br/><tt>External event {0} has disappeared</tt>
*An ''external'' event shall still have the ''external'' attribute in subsequent refinements.<br/><tt>Inconsistent status of external event {0}, external expected</tt>
*An ''external'' event shall have the ''extended'' attribute in subsequent refinements.<br/><tt>Inconsistent status of external event {0}, extended expected</tt>
*An ''external'' event shall not declare any additional parameter in subsequent refinements.<br/><tt>Parameters cannot be added in external events</tt>
*An ''external'' event shall not declare any additional guard in subsequent refinements.<br/><tt>Guards cannot be added in external events</tt>
*An ''external'' event shall not declare any additional action in subsequent refinements.<br/><tt>Actions cannot be added in external events</tt>
*An INITIALISATION event shall not contain an action modifying at the same time a ''private'' variable and a ''shared'' variable.<br/><tt>Action {0} of the INITIALISATION event modifies a private variable and a shared variable</tt>
*The actions of an INITIALISATION event modifying a ''shared'' variable shall be present and be syntactically equal in subsequent refinements.<br/><tt>Action {0} of the INITIALISATION event has disappeared</tt>

For additional information, see:
*[http://wiki.event-b.org/index.php/Event_Model_Decomposition#Ensuring_that_a_shared_variable_is_not_refined Ensuring that a shared variable is not refined].
*[http://wiki.event-b.org/index.php/Event_Model_Decomposition#Ensuring_that_an_external_event_is_not_refined Ensuring that an external event is not refined].
*[http://wiki.event-b.org/index.php/Event_Model_Decomposition#Ensuring_that_a_shared_variable_is_not_refined_by_an_initialization_event Ensuring that a shared variable is not refined by an initialization event].

== Tips and Tricks ==
=== ''Shared variables'' (A-style) decomposition ===
*'''An invariant is missing in a sub-machine, but I would like to have it copied.'''<br/>For example, an invariant between a concrete variable and some abstract variable may be useful.<br/>A solution is to add a theorem based on the missing predicate in the non-decomposed machine. See the last paragraph [[Event_Model_Decomposition#inv_distribution | about the invariants]] in the Event-B Model Decomposition page.

*'''An axiom is missing in a sub-context, but I would like to have it copied.'''<br/>Such a situation may be encountered if the "Decompose contexts" option is checked.<br/>The workaround proposed for the invariants applies to the axioms as well.<br/>For example, if the non-decomposed context defines the axiom [[Image:6a9ad2adbb2e75baca075ea3fad9caff.png]], and this axiom is not copied in a sub-context which contains the <i>S</i> carrier set but does not contain the <i>a</i> constant, then the information [[Image:68cdc76e2d75eae3946735c30e066fdc.png]] is lost. In order to keep it, it is possible to add the theorem [[Image:1018e2d83b49680b70cdc6853014077c.png]] in the non-decomposed context.

*'''A variable is tagged as ''private'' in a sub-machine, but I would like to have it tagged ''shared''.'''<br/>Such a behavior is suitable if you want to prevent this variable from being further refined.<br/>A solution for such a variable <i>v</i> of a sub-machine <i>M<sub>i</sub></i> is to add a fake action [[Image:f8e556131acd977a1af6d19f3924d148.png]] in a event of the non-decomposed machine which is associated to the sub-machine <i>M<sub>j</sub></i> (<i>M<sub>i</sub></i> and <i>M<sub>j</sub></i> are distinct sub-machines) when performing the decomposition.<br/>In the first example below, the <i>min</i> variable will become ''private'' when performing the decomposition:[[Image:scenario1.png|center|500px|]]<br/>In the second example below, the <i>min</i> variable will become ''shared'' when performing the decomposition:[[Image:scenario2.png|center|500px|]]

[[Category:User documentation]]
[[Category:Work in progress]]